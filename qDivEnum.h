enum connection_e {
	OFFLINE_NET,
	WAITING_NET,
	CONNECTED_NET
};

enum zone_e {
	OVERWORLD,
	CAVERN
};

enum biome_e {
	OCEAN,
	SHALLAND,
	BORDER_SHALLAND,
	ARIDIS,
	DESERT,
	REDWOOD_FOREST,
	SEDIMENTARY_CAVES,
	KOBATINE_HILLS,
	BLUEBERRY_SHALLAND,
	TROPICAL_FOREST,
	VOLCANO,
	MAX_BIOME
};

enum blockType_e {
	NO_TYPE_ST,
	FERTILE,
	DECOMPOSING,
	ZONE_PORTAL,
	FLUID,
	LOOTBOX,
	
	NO_TYPE_L,
	TIME_CHECK
};

enum floor_e {
	NO_FLOOR,
	SHALLAND_FLOOR,
	SHALLAND_FLATGRASS,
	WATER,
	SAND,
	ARIDIS_FLATGRASS,
	ARIDIS_FLOOR,
	REDWOOD_FLATGRASS,
	REDWOOD_FLOOR,
	SOIL,
	LIMESTONE_FLOOR,
	SANDSTONE_FLOOR,
	KOBATINE_FLOOR,
	KOBATINE_TILES,
	TROPICAL_FLATGRASS,
	COFFEE_FLOOR,
	LAVA,
	BASALT_FLOOR,
	CLAY
};

enum wall_e {
	NO_WALL,
	SHALLAND_WALL,
	SHALLAND_GRASS,
	SHALLAND_BUSH,
	ARIDIS_GRASS,
	ARIDIS_BUSH,
	ARIDIS_WALL,
	AGAVE,
	REDWOOD_WEEDS,
	REDWOOD_TREE,
	REDWOOD_LOG,
	REDWOOD_WALL,
	IMMINENT_POTATO,
	POTATO,
	OVERWORLD_PORTAL,
	CAVERN_PORTAL,
	LIMESTONE_WALL,
	STALAGMITE,
	LIMESTONE_BRICKS,
	BRONZE_CLUMP,
	ALUMINIUM_CLUMP,
	IRON_CLUMP,
	ARIDIS_LOOTBOX,
	COBALT_CLUMP,
	NICKEL_CLUMP,
	SANDSTONE_WALL,
	KOBATINE_WALL,
	KOBATINE_MUSHROOM,
	LIMESTONE_LAMP,
	LIT_LIMESTONE_LAMP,
	SANDSTONE_LAMP,
	LIT_SANDSTONE_LAMP,
	KOBATINE_LAMP,
	LIT_KOBATINE_LAMP,
	IMMINENT_BLUEBERRY_BUSH,
	BLUEBERRY_BUSH,
	SHALLAND_FENCE,
	ARIDIS_FENCE,
	REDWOOD_FENCE,
	SILICON_CLUMP,
	TUNGSTEN_CLUMP,
	WISP_LAMP,
	TINY_WISP,
	SPIDER_WEB,
	COFFEE_BUSH,
	FERN,
	VIVO_ORCHID,
	COFFEE_WALL,
	BASALT_WALL,
	BASALT_LAMP,
	LIT_BASALT_LAMP,
	IMMINENT_SPINACH,
	SPINACH,
	POTTED_KOBATINE_MUSHROOM,
	POTTED_AGAVE,
	POTTED_SPINACH,
	CACTUS_STEPTRAP
};

enum entity_ste {
	NOSUB_ST,
	LIVING_ST,
	PROJECTILE_ST
};

enum entity_e {
	NULL_ENTITY,
	PLAYER,
	SHALLAND_SNAIL,
	CALCIUM_CRAWLER,
	KOBATINE_SNAIL,
	KOBATINE_BUG,
	WILD_SHEEP,
	SHEEP,
	WISP,
	ALUMINIUM_STAR,
	NICKEL_STAR,
	SILICON_STAR,
	MAX_ENTITY_TYPE
};

enum direction_e {
	NORTH,
	EAST,
	SOUTH,
	WEST,
	NORTH_STOP,
	EAST_STOP,
	SOUTH_STOP,
	WEST_STOP
};

enum astar_nodeState_e {
	A_INVISIBLE,
	A_OBSTACLE,
	A_READY,
	A_MARKED
};

enum criterion_e {
	NO_CRITERION = -1,
	ACQUIRE_WOOL,
	MINE_SHALLAND_BUSH,
	MINE_ARIDIS_BUSH,
	MINE_REDWOOD_TREE,
	MINE_REDWOOD_LOG,
	MINE_SHALLAND_GRASS,
	MINE_BRONZE,
	MINE_ALUMINIUM,
	MINE_IRON,
	FERTILIZE_LAND,
	MINE_COBALT,
	MINE_NICKEL,
	MINE_SAND,
	MINE_LIMESTONE,
	MINE_KOBATINE_ROCK,
	ENCOUNTER_WISP,
	MINE_COFFEE_BUSH,
	MINE_VIVO_ORCHID,
	MINE_BASALT,
	HARVEST_SPINACH,
	KILL_KOBATINE_BUG,
	MINE_KOBATINE_MUSHROOM,
	MINE_AGAVE,
	MINE_CLAY,
	MINE_SILICON,
	MINE_TUNGSTEN,
	COLLECT_WOOD,
	MAX_CRITERION
};

enum warrior_e {
	BRONZE_SHORTSWORD,
	ALUMINIUM_STAR_ARTIFACT,
	IRON_SHORTSWORD,
	COBATINE_BROADSWORD,
	COBALT_SHORTSWORD,
	NICKEL_STAR_ARTIFACT,
	TROPICAL_BROADSWORD,
	CACTUS_STEPTRAP_ARTIFACT,
	SILICON_STAR_ARTIFACT,
	TUNGSTEN_LONGSWORD,
	MAX_WARRIOR_ARTIFACT
};
enum explorer_e {
	OLD_CHOPPER,
	IRON_KEY,
	SEQUOIA_RAFT_ARTIFACT,
	MAX_EXPLORER_ARTIFACT
};
enum builder_e {
	OLD_SWINGER,
	SHALLAND_FLOOR_ARTIFACT,
	SHALLAND_WALL_ARTIFACT,
	ARIDIS_FLOOR_ARTIFACT,
	ARIDIS_WALL_ARTIFACT,
	REDWOOD_FLOOR_ARTIFACT,
	REDWOOD_WALL_ARTIFACT,
	COFFEE_FLOOR_ARTIFACT,
	COFFEE_WALL_ARTIFACT,
	SANDSTONE_FLOOR_ARTIFACT,
	SANDSTONE_WALL_ARTIFACT,
	SANDSTONE_LAMP_ARTIFACT,
	LIMESTONE_FLOOR_ARTIFACT,
	LIMESTONE_WALL_ARTIFACT,
	LIMESTONE_BRICKS_ARTIFACT,
	LIMESTONE_LAMP_ARTIFACT,
	KOBATINE_FLOOR_ARTIFACT,
	KOBATINE_TILES_ARTIFACT,
	KOBATINE_WALL_ARTIFACT,
	KOBATINE_LAMP_ARTIFACT,
	BASALT_FLOOR_ARTIFACT,
	BASALT_WALL_ARTIFACT,
	BASALT_LAMP_ARTIFACT,
	WISP_LAMP_ARTIFACT,
	FERRA,
	COBALT_PICKAXE,
	MAX_BUILDER_ARTIFACT
};
enum gardener_e {
	SIMPLE_HOE,
	POTATO_ARTIFACT,
	SHALLAND_FENCE_ARTIFACT,
	ARIDIS_FENCE_ARTIFACT,
	REDWOOD_FENCE_ARTIFACT,
	POTTED_KOBATINE_MUSHROOM_ARTIFACT,
	SCISSORS,
	COBALT_HOE,
	POTTED_AGAVE_ARTIFACT,
	SPINACH_ARTIFACT,
	POTTED_SPINACH_ARTIFACT,
	MAX_GARDENER_ARTIFACT
};
enum engineer_e {
	IRON_WRENCH,
	MAX_ENGINEER_ARTIFACT
};
enum wizard_e {
	BREAKER_SPELL,
	VIVO_SPELL,
	WISP_SPELL,
	MAX_WIZARD_ARTIFACT
};

enum role_e {
	WARRIOR,
	EXPLORER,
	BUILDER,
	GARDENER,
	ENGINEER,
	WIZARD
};

enum usage_e {
	NO_USAGE,
	PRIMARY_USAGE,
	SECONDARY_USAGE,
	BLOCK_USAGE
};

enum effect_e {
	SWORD_SPRINT,
	
	QDIV_MAX_EFFECT,
	NO_EFFECT
};

enum damage_e {
	GENERIC_DAMAGE,
	FIRE_DAMAGE,
	QDIV_MAX_DAMAGE
};
